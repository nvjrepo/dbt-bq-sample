with sources as (
    select * from {{ source('basevn_payroll','record') }}
),

renamed as (
    select
        id as record_id,
        user_id,
        employee_id,
        employee_code,
        cycle_id,
        payroll_id,
        creator_id,
        system_id,
        cycle_export_id,
        payroll_export_id,
        columns_ma_khu_vuc_chuyen_mon as outlet_code,
        columns_ma_cham_cong as ma_cham_cong,
        columns_ma_nhan_su as ma_nhan_su,
        columns_status as status_code,
        case when columns_employee_type_code in ('',null) then null else columns_employee_type_code end as employee_type_code,
        case when columns_timesheet_code in ('',null) then null else columns_timesheet_code end as timesheet_code,
        case when columns_dept_code in ('',null) then null else columns_dept_code end as dept_code,
        case when columns_position_code in ('',null) then null else columns_position_code end as position_code,
        case when columns_office_code in ('',null) then null else columns_office_code end as office_code,
        case when columns_team_code in ('',null) then null else columns_team_code end as team_code,
        case when columns_old_employee_type_code in ('',null) then null else columns_old_employee_type_code end as old_employee_type_code,
        case when columns_tax_plan_code in ('',null) then null else columns_tax_plan_code end as tax_plan_code,
        case when columns_tax_no in ('',null) then null else columns_tax_no end as tax_no,
        case when columns_insurance_plan_code in ('',null) then null else columns_insurance_plan_code end as insurance_plan_code,
        case when columns_ssn_no in ('',null) then null else columns_ssn_no end as ssn_no,
        case when columns_inso_no in ('',null) then null else columns_inso_no end as inso_no,
        --employee pii
        case when safe_cast(columns_gender as int64) = 1 then 'male' else 'female' end as gender,
        safe.parse_date('%d/%m/%Y',columns_dob) as dob,
        case when columns_ten_nhan_su in (null, '') then null else columns_ten_nhan_su end as ten_nhan_su,
        case when columns_chuc_danh in (null, '') then null else columns_chuc_danh end as chuc_danh,
        case when columns_phan_loai_nhan_su in (null, '') then null else columns_phan_loai_nhan_su end as phan_loai_nhan_su,
        case when columns_tinh_trang_bao_hiem in (null, '') then null else columns_tinh_trang_bao_hiem end as tinh_trang_bao_hiem,
        case when columns_cong_ty in (null, '') then null else columns_cong_ty end as cong_ty,
        case when columns_van_phong in (null, '') then null else columns_van_phong end as van_phong,
        case when columns_khu_vuc_chuyen_mon in (null, '') then null else columns_khu_vuc_chuyen_mon end as khu_vuc_chuyen_mon,

        case when columns_so_tai_khoan_ngan_hang in (null, '') then null else columns_so_tai_khoan_ngan_hang end as bank_account,
        case when columns_ten_chu_tai_khoan_ngan_hang in (null, '') then null else columns_ten_chu_tai_khoan_ngan_hang end as bank_ower,
        case when columns_ten_ngan_hang in (null, '') then null else columns_ten_ngan_hang end as bank_name,
        case when columns_ten_chi_nhanh_ngan_hang in (null, '') then null else columns_ten_chi_nhanh_ngan_hang end as bank_branch,

        case when columns_inso_location in (null, '') then null else columns_inso_location end as inso_location,
        case when safe_cast(columns_personal_deduction as string) in (null, '') then null else safe_cast(columns_personal_deduction as string) end = '1' as is_personal_deduction,
        case when columns_timesheet_name in (null, '') then null else columns_timesheet_name end as timesheet_name,
        case when columns_dept_name in (null, '') then null else columns_dept_name end as dept_name,
        case when columns_position_name in (null, '') then null else columns_position_name end as position_name,
        case when columns_team_name in (null, '') then null else columns_team_name end as team_name,
        case when columns_nickname in (null, '') then null else columns_nickname end as nickname,
        case when columns_nationality in (null, '') then null else columns_nationality end as nationality,
        case when columns_email in (null, '') then null else columns_email end as email,
        case when columns_alt_email in (null, '') then null else columns_alt_email end as alt_email,
        case when columns_phone in (null, '') then null else columns_phone end as phone,
        case when columns_old_employee_type_name in (null, '') then null else columns_old_employee_type_name end as old_employee_type_name,
        case when columns_career_change_type in (null, '') then null else columns_career_change_type end as career_change_type,
        --time
        report_month,
        report_year,
        datetime(timestamp_seconds(safe_cast(cycle_export_start_date as int64)), '+07') as payroll_month,
        datetime(timestamp_seconds(safe_cast(cycle_export_start_date as int64)), '+07') as cycle_export_start_date,
        datetime(timestamp_seconds(safe_cast(cycle_export_end_date as int64)), '+07') as cycle_export_end_date,
        case when columns_official_start_date = '' then null else safe.parse_date('%d/%m/%Y',columns_official_start_date) end as start_at,
        case when columns_ngay_bat_dau_chu_ky_luong in (null, '') then null else safe.parse_date('%d/%m/%Y',columns_ngay_bat_dau_chu_ky_luong) end as cycle_payroll_start_date,
        case when columns_ngay_ket_thuc_chu_ky_luong in (null, '') then null else safe.parse_date('%d/%m/%Y',columns_ngay_ket_thuc_chu_ky_luong) end as cycle_payroll_end_date,
        datetime(timestamp_seconds(safe_cast(payroll_export_start_date as int64)), '+07') as payroll_export_start_at,
        datetime(timestamp_seconds(safe_cast(payroll_export_end_date as int64)), '+07') as payroll_export_end_date,


        case when columns_ngay_bat_dau in (null, '') then null else safe.parse_date('%d/%m/%Y',columns_ngay_bat_dau) end as started_at,
        case when columns_ngay_ket_thuc in (null, '') then null else safe.parse_date('%d/%m/%Y',columns_ngay_ket_thuc) end as ended_at,
        case
            when columns_ngay_le in (null, '') then null
            else safe.parse_date('%d/%m/%Y',safe_cast(columns_ngay_le as string))
        end as hodiday_date,
        case when columns_ngay_nghi_viec_rieng_huong_luong in (null, '') then null
            else safe.parse_date('%d/%m/%Y',safe_cast(columns_ngay_nghi_viec_rieng_huong_luong as string))
        end as paid_leave_date,
        case when columns_official_start_date in (null, '') then null else safe.parse_date('%d/%m/%Y', columns_official_start_date) end as official_start_date,
        case when columns_onleave_start_date in (null, '') then null else safe.parse_date('%d/%m/%Y', columns_onleave_start_date) end as onleave_start_date,
        case when columns_onleave_end_date in (null, '') then null else safe.parse_date('%d/%m/%Y', columns_onleave_end_date) end as onleave_end_date,
        case when columns_terminated_date in (null, '') then null else safe.parse_date('%d/%m/%Y', columns_terminated_date) end as terminated_date,
        case when columns_career_change_date in (null, '') then null else safe.parse_date('%d/%m/%Y', columns_career_change_date) end as career_change_date,
        loaded_date as loaded_at,
        datetime(timestamp_seconds(safe_cast(last_update as int64)), '+07') as last_update_at,
        datetime(timestamp_seconds(safe_cast(since as int64)), '+07') as since_at,
        --cycle information
        cycle_export_schedule,
        cycle_export_report_month,
        cycle_export_report_year,
        cycle_export_range,
        cycle_export_path,
        cycle_export_type,
        payroll_export_name,
        payroll_export_link,
        payroll_export_type,
        --type
        case
            when columns_phan_loai_nhan_su = 'Parttime' then columns_phan_loai_nhan_su
            when columns_phan_loai_nhan_su = 'Freelance' then columns_phan_loai_nhan_su
            else 'Fulltime'
        end as contract_type,
        columns_loai_chuc_danh as position_level,
        columns_tinh_trang as employee_status,
        safe_cast(columns_onleave_status as string) = '1' as is_onleave_status,
        lower(columns_tinh_trang) = 'on' as is_active,
        lower(columns_tinh_trang) = 'leave' as is_leave,
        safe_cast(columns_is_probation as int64) = 1 as is_probation,
        safe_cast(columns_is_terminated as int64) = 1 as is_terminated,

        --leave
        safe_cast(columns_nghi_phep_nam as float64) as leave_days,
        safe_cast(columns_work_day as float64) as work_day,
        safe_cast(columns_hrm_workday as float64) as hrm_workday,
        --paid hour
        safe_cast(columns_cong_di_lam_thuc_te as float64) as cong_di_lam_thuc_te,
        safe_cast(columns_tong_cong_tinh_luong as float64) as tong_cong_tinh_luong,
        safe_cast(columns_tong_gio_cong_thuc_te as float64) as tong_gio_cong_thuc_te,
        --work hour
        safe_cast(columns_so_cong_chuan as int64) as total_working_day,
        safe_cast(columns_so_cong_chuan as int64) * 8 as total_working_hour,
        safe_cast(columns_overtime_hours as int64) as overtime_hours,
        safe_cast(columns_so_gio_tang_ca_ngay_thuong as int64) as overtime_hour_working_day,
        safe_cast(columns_so_gio_tang_ca_ngay_nghi as int64) as overtime_hour_off_day,
        safe_cast(columns_so_gio_tang_ca_ngay_le as int64) as overtime_hour_holiday,
        safe_cast(columns_so_gio_tang_ca_ngay_thuong_tn as int64) as overtime_hour_working_day_tn,
        safe_cast(columns_so_gio_tang_ca_ngay_thuong_qd as int64) as overtime_hour_working_day_qd,
        safe_cast(columns_so_gio_tang_ca_ngay_nghi_tn as int64) as overtime_hour_off_day_tn,
        safe_cast(columns_so_gio_tang_ca_ngay_nghi_qd as int64) as overtime_hour_off_day_qd,
        safe_cast(columns_so_gio_tang_ca_ngay_le_tn as int64) as overtime_hour_holiday_tn,
        safe_cast(columns_so_gio_tang_ca_ngay_le_qd as int64) as overtime_hour_holiday_qd,
        safe_cast(columns_outside_hour_tf_hour as int64) as outside_hour_tf_hour,
        safe_cast(columns_annual_hour_tf_hour as int64) as annual_hour_tf_hour,
        safe_cast(columns_unpaid_hour_tf_hour as int64) as unpaid_hour_tf_hour,
        safe_cast(columns_sum_minute_late as int64) as minute_late,
        safe_cast(columns_sum_late as int64) as late,
        ---hour_point
        safe_cast(columns_annual_tf_point as float64) as annual_tf_point,
        safe_cast(columns_personal_tf_point as float64) as personal_tf_point,
        safe_cast(columns_business_tf_point as float64) as business_tf_point,
        safe_cast(columns_outside_tf_point as float64) as outside_tf_point,
        safe_cast(columns_unpaid_tf_point as float64) as unpaid_tf_point,
        safe_cast(columns_other_tf_point as float64) as other_tf_point,
        safe_cast(columns_outside_hour_tf_point as float64) as outside_hour_tf_point,
        safe_cast(columns_annual_hour_tf_point as float64) as annual_hour_tf_point,
        safe_cast(columns_unpaid_hour_tf_point as float64) as unpaid_hour_tf_point,
        safe_cast(columns_standard_points as float64) as standard_points,
        safe_cast(columns_old_stage_standard_points as float64) as old_stage_standard_points,
        safe_cast(columns_old_stage_day_points as float64) as old_stage_day_points,
        safe_cast(columns_day_points as float64) as day_points,
        safe_cast(columns_points as float64) as points,

        --shift information 
        safe_cast(columns_outside_hour_tf_shift as int64) as outside_hour_tf_shift,
        safe_cast(columns_annual_hour_tf_shift as int64) as annual_hour_tf_shift,
        safe_cast(columns_unpaid_hour_tf_shift as int64) as unpaid_hour_tf_shift,
        safe_cast(columns_annual_tf_shift as int64) as annual_tf_shift,
        safe_cast(columns_personal_tf_shift as int64) as personal_tf_shift,
        safe_cast(columns_business_tf_shift as int64) as business_tf_shift,
        safe_cast(columns_outside_tf_shift as int64) as outside_tf_shift,
        safe_cast(columns_unpaid_tf_shift as int64) as unpaid_tf_shift,
        safe_cast(columns_other_tf_shift as int64) as other_tf_shift,

        safe_cast(columns_annual_hour_tf_pto as int64) as annual_hour_tf_pto,


        --salary & compensation
        ---total package
        safe_cast(total_salaries as float64) as total_salaries,
        safe_cast(total_benefits as float64) as total_benefits,
        safe_cast(total_other_incomes as float64) as total_other_incomes,
        safe_cast(total_income as float64) as total_income,
        safe_cast(total_insurance as float64) as total_insurance,
        safe_cast(total_tax as float64) as total_tax,
        safe_cast(take_home as float64) as total_take_hone,
        safe_cast(total_company as float64) as total_borne_company,
        safe_cast(columns_tong_col as float64) as col,
        ---details salary
        safe_cast(columns_luong_co_ban as float64) as basic_salary,
        safe_cast(columns_luong_hieu_qua_cong_viec as float64) as performance_salary,
        safe_cast(columns_luong_hieu_qua_cong_viec_cu as float64) as old_performance_salary,
        safe_cast(columns_tong_luong_theo_cong as float64) as workday_salary,
        safe_cast(columns_tong_luong_thuc_te as float64) as actual_salary,
        safe_cast(columns_tong_luong_tang_ca as float64) as over_time_salary,
        safe_cast(columns_luong_co_ban_thu_viec as float64) as probation_basic_salary,
        safe_cast(columns_luong_kpi_thu_viec as float64) as probation_kpi_salary,
        safe_cast(columns_old_stage_basic_salary as float64) as old_stage_basic_salary,
        safe_cast(columns_old_stage_salary as float64) as old_stage_salary,
        safe_cast(columns_hourly_income as float64) as hourly_income,
        safe_cast(columns_sum_addition as float64) as sum_addition,
        safe_cast(columns_sum_deduction as float64) as sum_deduction,

        safe_cast(columns_chi_phi_bhxh_nld_dong as float64) as chi_phi_bhxh_nld_dong,
        safe_cast(columns_chi_phi_bhyt_nld_dong as float64) as chi_phi_bhyt_nld_dong,
        safe_cast(columns_chi_phi_bhtn_nld_dong as float64) as chi_phi_bhtn_nld_dong,
        safe_cast(columns_truy_thu_bhyt as float64) as truy_thu_bhyt,
        safe_cast(columns_tong_chi_phi_bhxh_bhyt_bhtn_nld_dong as float64) as tong_chi_phi_bhxh_bhyt_bhtn_nld_dong,
        safe_cast(columns_chi_phi_bhxh_ct_dong as float64) as chi_phi_bhxh_ct_dong,
        safe_cast(columns_chi_phi_bhyt_ct_dong as float64) as chi_phi_bhyt_ct_dong,
        safe_cast(columns_chi_phi_bhtn_ct_dong as float64) as chi_phi_bhtn_ct_dong,
        safe_cast(columns_truy_thu_bhyt_ct_dong as float64) as truy_thu_bhyt_ct_dong,
        safe_cast(columns_tong_chi_phi_bhxh_bhyt_bhtn_ct_dong as float64) as tong_chi_phi_bhxh_bhyt_bhtn_ct_dong,

        safe_cast(columns_phu_cap_com as float64) as phu_cap_com,
        safe_cast(columns_phu_cap_dien_thoai as float64) as phu_cap_dien_thoai,
        safe_cast(columns_phu_cap_di_lai as float64) as phu_cap_di_lai,
        safe_cast(columns_tong_phu_cap as float64) as tong_phu_cap,
        safe_cast(columns_phu_cap_com_thuc_te as float64) as phu_cap_com_thuc_te,
        safe_cast(columns_phu_cap_dien_thoai_thuc_te as float64) as phu_cap_dien_thoai_thuc_te,
        safe_cast(columns_phu_cap_di_lai_thuc_te as float64) as phu_cap_di_lai_thuc_te,
        safe_cast(columns_tong_phu_cap_thuc_te as float64) as tong_phu_cap_thuc_te,
        safe_cast(columns_phu_cap_com_cu as float64) as phu_cap_com_cu,
        safe_cast(columns_phu_cap_dien_thoai_cu as float64) as phu_cap_dien_thoai_cu,
        safe_cast(columns_phu_cap_di_lai_cu as float64) as phu_cap_di_lai_cu,

        safe_cast(columns_tong_luong as float64) as tong_luong,

        safe_cast(columns_chinh_sach_thue_tncn as string) as chinh_sach_thue_tncn,
        safe_cast(columns_thu_nhap_mien_thue as float64) as thu_nhap_mien_thue,
        safe_cast(columns_tong_thu_nhap_chiu_thue as float64) as tong_thu_nhap_chiu_thue,
        safe_cast(columns_giam_tru_ca_nhan as float64) as giam_tru_ca_nhan,
        safe_cast(columns_so_nguoi_phu_thuoc as float64) as so_nguoi_phu_thuoc,
        safe_cast(columns_giam_tru_nguoi_phu_thuoc as float64) as giam_tru_nguoi_phu_thuoc,
        safe_cast(columns_cac_khoan_giam_thue as float64) as cac_khoan_giam_thue,
        safe_cast(columns_thu_nhap_tinh_thue_tncn as float64) as thu_nhap_tinh_thue_tncn,
        safe_cast(columns_thue_tncn as float64) as thue_tncn,
        safe_cast(columns_thuong_doanh_thu as float64) as thuong_doanh_thu,
        safe_cast(columns_thuong_cuoi_nam as float64) as thuong_cuoi_nam,
        safe_cast(columns_cac_khoan_cong_them as float64) as cac_khoan_cong_them,
        safe_cast(columns_tong_thu_nhap_khac as float64) as tong_thu_nhap_khac,
        safe_cast(columns_tong_thu_nhap as float64) as tong_thu_nhap,
        safe_cast(columns_cac_khoan_tru_khac as float64) as cac_khoan_tru_khac,
        safe_cast(columns_doan_phi as float64) as doan_phi,
        safe_cast(columns_cong_thu_viec as float64) as cong_thu_viec,
        safe_cast(columns_khoan_tru_sau_thue as float64) as khoan_tru_sau_thue,
        safe_cast(columns_thuc_nhan as float64) as thuc_nhan,
        safe_cast(columns_trich_chi_phi_luong_thang as float64) as trich_chi_phi_luong_thang,

        --insurance & tax

        columns_insurance_plan_name,
        columns_insurance_base_on,
        columns_insurance_custom_salary,
        columns_tax_plan_name,



        --logic
        extract(year from current_date()) - extract(year from safe.parse_date('%d/%m/%Y',columns_dob)) as age,
        --others
        schedule,
        is_main = '1' as is_main,
        publish_payslip,
        confirm_status,
        resolve_status,
        columns_num_career_change as num_career_change,
        adjust,
        columns_pto as pto,
        columns_cto as cto,
        safe_cast(columns_overtime as float64) as overtime,
        creator_username
    from sources
)

select * from renamed
